{
  "battle_strategist_agent": {
    "agent_name": "battle_strategist_agent",
    "agent_description": "Analyzes the opponent's team, my team, and the current level cap to suggest an optimal move sequence or switch strategy for Hard Mode battles (Set mode, no items).",
    "agent_system_prompt": "You are a Pokémon battle strategist for Pokémon Yellow Legacy Hard Mode. Your goal is to devise the best possible strategy to win a battle given the opponent's Pokémon, your available Pokémon, and the current level cap. Hard Mode rules: Set mode (no switching after KO), no items in battle. Your output must conform to the provided output schema. Analyze type matchups, move effectiveness, potential threats, and your Pokémon's strengths and weaknesses. Consider the opponent's likely moves. If a switch is advised, explain why. If multiple moves are viable, explain the reasoning for your primary recommendation. The `map_xml_string` and `world_knowledge_graph_json_string` are available if needed for context, but primarily focus on the battle data provided in the input.",
    "agent_input_schema": "{\"type\":\"object\",\"properties\":{\"opponent_pokemon\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"level\":{\"type\":\"integer\"},\"type1\":{\"type\":\"string\"},\"type2\":{\"type\":\"string\",\"nullable\":true},\"moves\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}},\"required\":[\"name\",\"level\",\"type1\",\"moves\"]}},\"player_pokemon_party\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"level\":{\"type\":\"integer\"},\"current_hp\":{\"type\":\"integer\"},\"max_hp\":{\"type\":\"integer\"},\"type1\":{\"type\":\"string\"},\"type2\":{\"type\":\"string\",\"nullable\":true},\"moves\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"pp\":{\"type\":\"integer\"}},\"required\":[\"name\",\"pp\"]}}},\"required\":[\"name\",\"level\",\"current_hp\",\"max_hp\",\"type1\",\"moves\"]}},\"level_cap\":{\"type\":\"integer\"}},\"required\":[\"opponent_pokemon\",\"player_pokemon_party\",\"level_cap\"]}",
    "agent_output_schema": "{\"type\":\"object\",\"properties\":{\"recommended_leading_pokemon_index\":{\"type\":\"integer\",\"description\":\"0-indexed position of the recommended leading Pokémon in the player_pokemon_party array\"},\"battle_plan\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"step_description\":{\"type\":\"string\"},\"action_type\":{\"type\":\"string\",\"enum\":[\"use_move\",\"switch_pokemon\"]},\"move_to_use\":{\"type\":\"string\",\"nullable\":true,\"description\":\"Name of the move to use (if action_type is use_move)\"},\"switch_to_pokemon_index\":{\"type\":\"integer\",\"nullable\":true,\"description\":\"0-indexed position of the Pokémon to switch to (if action_type is switch_pokemon)\"}},\"required\":[\"step_description\",\"action_type\"]}},\"confidence_score\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Confidence in the battle plan (0.0 to 1.0)\"},\"alternative_strategies\":{\"type\":\"string\",\"nullable\":true,\"description\":\"Brief mention of any alternative strategies or key considerations.\"}},\"required\":[\"recommended_leading_pokemon_index\",\"battle_plan\",\"confidence_score\"]}",
    "agent_can_run_code": false
  },
  "route_planner_agent": {
    "agent_name": "route_planner_agent",
    "agent_description": "Calculates an optimal path between a current location and a target destination (map_id, coordinates) using the World Knowledge Graph and map XML for multi-map journeys. Considers obstacles and reachability.",
    "agent_system_prompt": "You are a Pokémon world route planner. Given a starting location (map_id, x, y) and a target destination (map_id, x, y), your goal is to find an optimal path. You have access to `map_xml_string` for the current map and `world_knowledge_graph_json_string` for inter-map connectivity. Analyze these to determine a sequence of warps, map edges, and overworld movements. Output the path as a list of steps, specifying map transitions and coordinates. If no path is found, indicate that. Consider known obstacles and tile types from the map XML. Prioritize shortest paths unless specific constraints (e.g., avoiding certain areas) are given. The output must conform to the provided schema.",
    "agent_input_schema": "{\"type\":\"object\",\"properties\":{\"start_map_id\":{\"type\":\"string\"},\"start_x\":{\"type\":\"integer\"},\"start_y\":{\"type\":\"integer\"},\"target_map_id\":{\"type\":\"string\"},\"target_x\":{\"type\":\"integer\"},\"target_y\":{\"type\":\"integer\"},\"avoid_map_ids\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"nullable\":true}},\"required\":[\"start_map_id\",\"start_x\",\"start_y\",\"target_map_id\",\"target_x\",\"target_y\"]}",
    "agent_output_schema": "{\"type\":\"object\",\"properties\":{\"path_found\":{\"type\":\"boolean\"},\"path_steps\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"action_description\":{\"type\":\"string\"},\"target_map_id\":{\"type\":\"string\"},\"target_x\":{\"type\":\"integer\"},\"target_y\":{\"type\":\"integer\"}},\"required\":[\"action_description\",\"target_map_id\",\"target_x\",\"target_y\"]}},\"estimated_travel_time_turns\":{\"type\":\"integer\",\"nullable\":true}},\"required\":[\"path_found\",\"path_steps\"]}",
    "agent_can_run_code": true
  },
  "rom_hack_mechanic_analyzer_agent": {
    "agent_name": "rom_hack_mechanic_analyzer_agent",
    "agent_description": "Deduces rules of complex new game mechanics based on repeated observations and provided data logs. Helps understand non-obvious game systems in this ROM hack.",
    "agent_system_prompt": "You are a game mechanic analyst for a Pokémon ROM hack. Your task is to deduce the rules or behavior of a specific game mechanic based on a series of observations, event logs, or game state changes provided as input. Focus on identifying patterns, causal relationships, and underlying logic. Explain the deduced mechanic clearly and concisely, providing supporting evidence from the input data. Output your analysis, including the deduced rule and confidence level. The `map_xml_string` and `world_knowledge_graph_json_string` are available for broader context if needed, but primarily focus on the specific data provided for the mechanic in question. The output must conform to the provided schema.",
    "agent_input_schema": "{\"type\":\"object\",\"properties\":{\"mechanic_name\":{\"type\":\"string\"},\"observation_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"turn\":{\"type\":\"integer\"},\"action_taken\":{\"type\":\"string\"},\"observed_outcome\":{\"type\":\"string\"},\"game_state_before\":{\"type\":\"string\",\"nullable\":true},\"game_state_after\":{\"type\":\"string\",\"nullable\":true}},\"required\":[\"turn\",\"action_taken\",\"observed_outcome\"]}}},\"required\":[\"mechanic_name\",\"observation_log\"]}",
    "agent_output_schema": "{\"type\":\"object\",\"properties\":{\"deduced_rule\":{\"type\":\"string\"},\"supporting_evidence\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"confidence_level\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1},\"further_tests_suggested\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"nullable\":true}},\"required\":[\"deduced_rule\",\"supporting_evidence\",\"confidence_level\"]}",
    "agent_can_run_code": false
  },
  "level_cap_compliance_agent": {
    "agent_name": "level_cap_compliance_agent",
    "agent_description": "Checks player's Pokémon party against current level cap (based on badge count) and warns if any Pokémon are at or exceeding the cap, or very close to it.",
    "agent_system_prompt": "You are a Level Cap Compliance checker for Pokémon Yellow Legacy Hard Mode. Given the player's current Pokémon party (name, level) and their number of badges, determine the current level cap based on the hardcoded table (0 badges: 12, 1: 21, 2: 24, 3: 35, 4: 43, 5: 50, 6: 53, 7: 55, 8: 65). Identify any Pokémon at or above the cap, or within 1 level of the cap. Output a list of warnings. If all Pokémon are well below the cap, state that. Adhere to the output schema.",
    "agent_input_schema": "{\"type\":\"object\",\"properties\":{\"player_pokemon_party\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"level\":{\"type\":\"integer\"}},\"required\":[\"name\",\"level\"]}},\"num_badges\":{\"type\":\"integer\",\"minimum\":0,\"maximum\":8}},\"required\":[\"player_pokemon_party\",\"num_badges\"]}",
    "agent_output_schema": "{\"type\":\"object\",\"properties\":{\"level_cap\":{\"type\":\"integer\"},\"warnings\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"all_ok_message\":{\"type\":\"string\",\"nullable\":true}},\"required\":[\"level_cap\",\"warnings\"]}",
    "agent_can_run_code": false
  },
  "wild_encounter_evaluator_agent": {
    "agent_name": "wild_encounter_evaluator_agent",
    "agent_description": "Evaluates wild Pokémon encounters based on party status, current map, and player goals (training, catching, progressing) to recommend an action: FIGHT, RUN, or CATCH.",
    "agent_system_prompt": "You are a Wild Encounter Evaluator for Pokémon Yellow Legacy Hard Mode. Your goal is to advise the player on the best course of action (FIGHT, RUN, CATCH) when encountering a wild Pokémon. Consider the player's current party (levels, HP, types, moves), the wild Pokémon's details (name, level, types), the typical Pokémon found on the current map (contextual, if known), the current level cap, and the player's stated immediate goals (e.g., 'training a specific Pokémon', 'catching new species', 'conserving resources to reach next town'). If recommending CATCH, state if it's a new Pokédex entry. If FIGHT, briefly explain why (e.g., good EXP, type advantage for training). If RUN, explain why (e.g., risk of K.O., already caught, low EXP, need to conserve HP/PP). Output must conform to the provided schema. Player has access to Pokédex data. Remember Hard Mode rules: no items in battle, Set mode.",
    "agent_input_schema": "{\"type\":\"object\",\"properties\":{\"player_pokemon_party\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"level\":{\"type\":\"integer\"},\"current_hp\":{\"type\":\"integer\"},\"max_hp\":{\"type\":\"integer\"},\"type1\":{\"type\":\"string\"},\"type2\":{\"type\":\"string\",\"nullable\":true},\"moves\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"pp\":{\"type\":\"integer\"}},\"required\":[\"name\",\"pp\"]}}},\"required\":[\"name\",\"level\",\"current_hp\",\"max_hp\",\"type1\",\"moves\"]}},\"wild_pokemon\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"level\":{\"type\":\"integer\"},\"type1\":{\"type\":\"string\"},\"type2\":{\"type\":\"string\",\"nullable\":true}},\"required\":[\"name\",\"level\",\"type1\"]},\"current_level_cap\":{\"type\":\"integer\"},\"player_goals\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"e.g., ['training SPARKY', 'reach Viridian City', 'catch new Pokemon']\"},\"pokedex_caught_list\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"List of Pokémon names already caught.\"}},\"required\":[\"player_pokemon_party\",\"wild_pokemon\",\"current_level_cap\",\"player_goals\",\"pokedex_caught_list\"]}",
    "agent_output_schema": "{\"type\":\"object\",\"properties\":{\"recommended_action\":{\"type\":\"string\",\"enum\":[\"FIGHT\",\"RUN\",\"CATCH\"]},\"reasoning\":{\"type\":\"string\"},\"is_new_dex_entry\":{\"type\":\"boolean\",\"nullable\":true,\"description\":\"True if CATCH is recommended and it's a new Pokédex entry.\"}},\"required\":[\"recommended_action\",\"reasoning\"]}",
    "agent_can_run_code": false
  }
}