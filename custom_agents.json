{
  "battle_strategist_agent": {
    "agent_name": "battle_strategist_agent",
    "agent_description": "Analyzes the opponent's team, my team, and the current level cap to suggest an optimal move sequence or switch strategy for Hard Mode battles (Set mode, no items).",
    "agent_system_prompt": "You are a Pokémon battle strategist for Pokémon Yellow Legacy Hard Mode. Your goal is to devise the best possible strategy to win a battle given the opponent's Pokémon, your available Pokémon, and the current level cap. Hard Mode rules: Set mode (no switching after KO), no items in battle. Your output must conform to the provided output schema. Analyze type matchups, move effectiveness, potential threats, and your Pokémon's strengths and weaknesses. Consider the opponent's likely moves. If a switch is advised, explain why. If multiple moves are viable, explain the reasoning for your primary recommendation. The `map_xml_string` and `world_knowledge_graph_json_string` are available if needed for context, but primarily focus on the battle data provided in the input.",
    "agent_input_schema": "{\"type\":\"object\",\"properties\":{\"opponent_pokemon\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"level\":{\"type\":\"integer\"},\"type1\":{\"type\":\"string\"},\"type2\":{\"type\":\"string\",\"nullable\":true},\"moves\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}},\"required\":[\"name\",\"level\",\"type1\",\"moves\"]}},\"player_pokemon_party\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"level\":{\"type\":\"integer\"},\"current_hp\":{\"type\":\"integer\"},\"max_hp\":{\"type\":\"integer\"},\"type1\":{\"type\":\"string\"},\"type2\":{\"type\":\"string\",\"nullable\":true},\"moves\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"pp\":{\"type\":\"integer\"}},\"required\":[\"name\",\"pp\"]}}},\"required\":[\"name\",\"level\",\"current_hp\",\"max_hp\",\"type1\",\"moves\"]}},\"level_cap\":{\"type\":\"integer\"}},\"required\":[\"opponent_pokemon\",\"player_pokemon_party\",\"level_cap\"]}",
    "agent_output_schema": "{\"type\":\"object\",\"properties\":{\"recommended_leading_pokemon_index\":{\"type\":\"integer\",\"description\":\"0-indexed position of the recommended leading Pokémon in the player_pokemon_party array\"},\"battle_plan\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"step_description\":{\"type\":\"string\"},\"action_type\":{\"type\":\"string\",\"enum\":[\"use_move\",\"switch_pokemon\"]},\"move_to_use\":{\"type\":\"string\",\"nullable\":true,\"description\":\"Name of the move to use (if action_type is use_move)\"},\"switch_to_pokemon_index\":{\"type\":\"integer\",\"nullable\":true,\"description\":\"0-indexed position of the Pokémon to switch to (if action_type is switch_pokemon)\"}},\"required\":[\"step_description\",\"action_type\"]}},\"confidence_score\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1,\"description\":\"Confidence in the battle plan (0.0 to 1.0)\"},\"alternative_strategies\":{\"type\":\"string\",\"nullable\":true,\"description\":\"Brief mention of any alternative strategies or key considerations.\"}},\"required\":[\"recommended_leading_pokemon_index\",\"battle_plan\",\"confidence_score\"]}",
    "agent_can_run_code": false
  },
  "route_planner_agent": {
    "agent_name": "route_planner_agent",
    "agent_description": "Calculates a path between a current location and a target destination. EXPERIMENTAL for complex intra-map paths with obstacles like ledges; may fail or provide sub-optimal routes. (Can run Python code)",
    "agent_system_prompt": "You are a Pokémon world route planner. Your goal is to find an optimal path between a start (map_id, x, y) and target (map_id, x, y). You MUST use your `run_code` tool to analyze `map_xml_string` (for intra-map pathing) and `world_knowledge_graph_json_string` (for inter-map transitions). Your Python code should implement a pathfinding algorithm (e.g., BFS, A*) that considers tile types (ground, grass, impassable, ledges - remember ledges are one-way Y+2 downwards), warps, and map edges. Prioritize shortest paths unless constraints (e.g., `avoid_map_ids`) are given. Output the path as a list of steps. If no path is found, state that. If the path involves complex ledge navigation that your algorithm struggles with, acknowledge this limitation and suggest manual navigation as a fallback for that segment. The output must conform to the provided schema.",
    "agent_input_schema": "{\"type\":\"object\",\"properties\":{\"start_map_id\":{\"type\":\"string\"},\"start_x\":{\"type\":\"integer\"},\"start_y\":{\"type\":\"integer\"},\"target_map_id\":{\"type\":\"string\"},\"target_x\":{\"type\":\"integer\"},\"target_y\":{\"type\":\"integer\"},\"avoid_map_ids\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"nullable\":true}},\"required\":[\"start_map_id\",\"start_x\",\"start_y\",\"target_map_id\",\"target_x\",\"target_y\"]}",
    "agent_output_schema": "{\"type\":\"object\",\"properties\":{\"path_found\":{\"type\":\"boolean\"},\"path_steps\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"action_description\":{\"type\":\"string\"},\"target_map_id\":{\"type\":\"string\"},\"target_x\":{\"type\":\"integer\"},\"target_y\":{\"type\":\"integer\"}},\"required\":[\"action_description\",\"target_map_id\",\"target_x\",\"target_y\"]}},\"estimated_travel_time_turns\":{\"type\":\"integer\",\"nullable\":true}},\"required\":[\"path_found\",\"path_steps\"]}",
    "agent_can_run_code": true
  },
  "rom_hack_mechanic_analyzer_agent": {
    "agent_name": "rom_hack_mechanic_analyzer_agent",
    "agent_description": "Deduces rules of complex new game mechanics based on repeated observations and provided data logs. Helps understand non-obvious game systems in this ROM hack.",
    "agent_system_prompt": "You are a game mechanic analyst for a Pokémon ROM hack. Your task is to deduce the rules or behavior of a specific game mechanic based on a series of observations, event logs, or game state changes provided as input. Focus on identifying patterns, causal relationships, and underlying logic. Explain the deduced mechanic clearly and concisely, providing supporting evidence from the input data. Output your analysis, including the deduced rule and confidence level. The `map_xml_string` and `world_knowledge_graph_json_string` are available for broader context if needed, but primarily focus on the specific data provided for the mechanic in question. The output must conform to the provided schema.",
    "agent_input_schema": "{\"type\":\"object\",\"properties\":{\"mechanic_name\":{\"type\":\"string\"},\"observation_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"turn\":{\"type\":\"integer\"},\"action_taken\":{\"type\":\"string\"},\"observed_outcome\":{\"type\":\"string\"},\"game_state_before\":{\"type\":\"string\",\"nullable\":true},\"game_state_after\":{\"type\":\"string\",\"nullable\":true}},\"required\":[\"turn\",\"action_taken\",\"observed_outcome\"]}}},\"required\":[\"mechanic_name\",\"observation_log\"]}",
    "agent_output_schema": "{\"type\":\"object\",\"properties\":{\"deduced_rule\":{\"type\":\"string\"},\"supporting_evidence\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"confidence_level\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1},\"further_tests_suggested\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"nullable\":true}},\"required\":[\"deduced_rule\",\"supporting_evidence\",\"confidence_level\"]}",
    "agent_can_run_code": false
  },
  "level_cap_compliance_agent": {
    "agent_name": "level_cap_compliance_agent",
    "agent_description": "Checks player's Pokémon party against current level cap (based on badge count) and warns if any Pokémon are at or exceeding the cap, or very close to it.",
    "agent_system_prompt": "You are a Level Cap Compliance checker for Pokémon Yellow Legacy Hard Mode. Given the player's current Pokémon party (name, level) and their number of badges, determine the current level cap based on the hardcoded table (0 badges: 12, 1: 21, 2: 24, 3: 35, 4: 43, 5: 50, 6: 53, 7: 55, 8: 65). Identify any Pokémon at or above the cap, or within 1 level of the cap. Output a list of warnings. If all Pokémon are well below the cap, state that. Adhere to the output schema.",
    "agent_input_schema": "{\"type\":\"object\",\"properties\":{\"player_pokemon_party\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"level\":{\"type\":\"integer\"}},\"required\":[\"name\",\"level\"]}},\"num_badges\":{\"type\":\"integer\",\"minimum\":0,\"maximum\":8}},\"required\":[\"player_pokemon_party\",\"num_badges\"]}",
    "agent_output_schema": "{\"type\":\"object\",\"properties\":{\"level_cap\":{\"type\":\"integer\"},\"warnings\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"all_ok_message\":{\"type\":\"string\",\"nullable\":true}},\"required\":[\"level_cap\",\"warnings\"]}",
    "agent_can_run_code": false
  },
  "wild_encounter_evaluator_agent": {
    "agent_name": "wild_encounter_evaluator_agent",
    "agent_description": "Evaluates wild Pokémon encounters based on party status, current map, and player goals (training, catching, progressing) to recommend an action: FIGHT, RUN, or CATCH.",
    "agent_system_prompt": "You are a Wild Encounter Evaluator for Pokémon Yellow Legacy Hard Mode. Your goal is to advise the player on the best course of action (FIGHT, RUN, CATCH) when encountering a wild Pokémon. Consider the player's current party (levels, HP, types, moves), the wild Pokémon's details (name, level, types), the typical Pokémon found on the current map (contextual, if known), the current level cap, and the player's stated immediate goals (e.g., 'training a specific Pokémon', 'catching new species', 'conserving resources to reach next town'). If recommending CATCH, state if it's a new Pokédex entry. If FIGHT, briefly explain why (e.g., good EXP, type advantage for training). If RUN, explain why (e.g., risk of K.O., already caught, low EXP, need to conserve HP/PP). Output must conform to the provided schema. Player has access to Pokédex data. Remember Hard Mode rules: no items in battle, Set mode.",
    "agent_input_schema": "{\"type\":\"object\",\"properties\":{\"player_pokemon_party\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"level\":{\"type\":\"integer\"},\"current_hp\":{\"type\":\"integer\"},\"max_hp\":{\"type\":\"integer\"},\"type1\":{\"type\":\"string\"},\"type2\":{\"type\":\"string\",\"nullable\":true},\"moves\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"pp\":{\"type\":\"integer\"}},\"required\":[\"name\",\"pp\"]}}},\"required\":[\"name\",\"level\",\"current_hp\",\"max_hp\",\"type1\",\"moves\"]}},\"wild_pokemon\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"level\":{\"type\":\"integer\"},\"type1\":{\"type\":\"string\"},\"type2\":{\"type\":\"string\",\"nullable\":true}},\"required\":[\"name\",\"level\",\"type1\"]},\"current_level_cap\":{\"type\":\"integer\"},\"player_goals\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"e.g., ['training SPARKY', 'reach Viridian City', 'catch new Pokemon']\"},\"pokedex_caught_list\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"List of Pokémon names already caught.\"}},\"required\":[\"player_pokemon_party\",\"wild_pokemon\",\"current_level_cap\",\"player_goals\",\"pokedex_caught_list\"]}",
    "agent_output_schema": "{\"type\":\"object\",\"properties\":{\"recommended_action\":{\"type\":\"string\",\"enum\":[\"FIGHT\",\"RUN\",\"CATCH\"]},\"reasoning\":{\"type\":\"string\"},\"is_new_dex_entry\":{\"type\":\"boolean\",\"nullable\":true,\"description\":\"True if CATCH is recommended and it's a new Pokédex entry.\"}},\"required\":[\"recommended_action\",\"reasoning\"]}",
    "agent_can_run_code": false
  },
  "npc_dialogue_analyzer_agent": {
    "agent_name": "npc_dialogue_analyzer_agent",
    "agent_description": "Analyzes NPC dialogue and current game state to identify potential clues, hidden meanings, or tasks implied by the dialogue. Helps with story progression and finding triggers.",
    "agent_system_prompt": "You are an NPC Dialogue Analyzer for Pokémon Yellow Legacy. Given NPC dialogue text, the current player goals, and relevant game state information (like current map, known items, or blocked paths), your task is to interpret the dialogue for actionable intelligence. Identify potential quests, hints about how to overcome obstacles (e.g., how to open a blocked path), clues about item locations or uses, or information that might change goal priority. Explain your reasoning. Output must conform to the provided schema. The `map_xml_string` and `world_knowledge_graph_json_string` are available for broader context if needed.",
    "agent_input_schema": "{\"type\":\"object\",\"properties\":{\"dialogue_text\":{\"type\":\"string\"},\"current_player_primary_goal\":{\"type\":\"string\"},\"current_player_secondary_goal\":{\"type\":\"string\"},\"current_map_id\":{\"type\":\"string\"},\"relevant_inventory_items\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"known_obstacles\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}},\"required\":[\"dialogue_text\",\"current_player_primary_goal\",\"current_map_id\"]}",
    "agent_output_schema": "{\"type\":\"object\",\"properties\":{\"key_takeaways\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"suggested_next_actions_based_on_dialogue\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}},\"confidence_in_interpretation\":{\"type\":\"number\",\"minimum\":0,\"maximum\":1}},\"required\":[\"key_takeaways\",\"suggested_next_actions_based_on_dialogue\",\"confidence_in_interpretation\"]}",
    "agent_can_run_code": false
  },
  "optimal_training_spot_agent": {
    "agent_name": "optimal_training_spot_agent",
    "agent_description": "Suggests routes/areas for efficient EXP gain for specific Pokémon under the current level cap, considering type matchups if possible. Can run Python code.",
    "agent_system_prompt": "You are an Optimal Training Spot Advisor for Pokémon Yellow Legacy Hard Mode. Given the player's current Pokémon party (levels, types), the current level cap, and optionally known encounter data for routes from `map_xml_string` or `world_knowledge_graph_json_string` (if your code parses it), your goal is to suggest 1-2 optimal routes or areas for efficient EXP gain for specific Pokémon that are under the cap. Prioritize spots with favorable type matchups for the Pokémon needing training or spots known for Pokémon that give good EXP. If specific encounter data is unavailable or hard to parse, provide general advice based on typical early-game areas. Your output must conform to the provided schema. You have access to `run_code` to analyze map data for encounter tables if you can implement such parsing.",
    "agent_input_schema": "{\"type\":\"object\",\"properties\":{\"player_pokemon_party\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"level\":{\"type\":\"integer\"},\"type1\":{\"type\":\"string\"},\"type2\":{\"type\":\"string\",\"nullable\":true}},\"required\":[\"name\",\"level\",\"type1\"]}},\"current_level_cap\":{\"type\":\"integer\"},\"pokemon_to_train\":{\"type\":\"string\",\"nullable\":true,\"description\":\"Optional: Name of a specific Pokémon in the party to focus training on.\"}},\"required\":[\"player_pokemon_party\",\"current_level_cap\"]}",
    "agent_output_schema": "{\"type\":\"object\",\"properties\":{\"suggested_spots\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"location_name\":{\"type\":\"string\",\"description\":\"e.g., Viridian Forest, Route 1 (North of Pallet)\"},\"reasoning\":{\"type\":\"string\"},\"target_pokemon_for_exp\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"nullable\":true,\"description\":\"Wild Pokémon to target in that area, if known.\"}},\"required\":[\"location_name\",\"reasoning\"]}},\"general_advice\":{\"type\":\"string\",\"nullable\":true}},\"required\":[\"suggested_spots\"]}",
    "agent_can_run_code": true
  },
  "item_reminder_agent": {
    "agent_name": "item_reminder_agent",
    "agent_description": "Checks if the player is near any known uncollected items on the current map and provides a reminder.",
    "agent_system_prompt": "You are an Item Reminder assistant for Pokémon Yellow Legacy. Given the player's current map_id, coordinates, a list of known item locations (from Map Sprites) on the current map, and the player's inventory, check if the player is within a small proximity (e.g., 5-10 tiles) of any uncollected items. If so, output a reminder message specifying the item and its location. If no items are nearby or all nearby items are collected (not in Map Sprites anymore), state that. Output must conform to the schema.",
    "agent_input_schema": "{\"type\":\"object\",\"properties\":{\"current_map_id\":{\"type\":\"string\"},\"player_x\":{\"type\":\"integer\"},\"player_y\":{\"type\":\"integer\"},\"map_sprite_items\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\"},\"x\":{\"type\":\"integer\"},\"y\":{\"type\":\"integer\"}},\"required\":[\"name\",\"x\",\"y\"]}},\"player_inventory\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}},\"required\":[\"current_map_id\",\"player_x\",\"player_y\",\"map_sprite_items\",\"player_inventory\"]}",
    "agent_output_schema": "{\"type\":\"object\",\"properties\":{\"reminder_message\":{\"type\":\"string\",\"nullable\":true,\"description\":\"Message reminding about a nearby item, or null if no relevant items.\"},\"item_name\":{\"type\":\"string\",\"nullable\":true},\"item_x\":{\"type\":\"integer\",\"nullable\":true},\"item_y\":{\"type\":\"integer\",\"nullable\":true}},\"required\":[]}",
    "agent_can_run_code": false
  },
  "map_analyzer_agent": {
    "agent_name": "map_analyzer_agent",
    "agent_description": "Analyzes the current map XML (`map_xml_string`) and game state (map sprites, player position) to identify strategic points of interest such as unencountered trainers, uncollected items, potential training spots, and areas for further exploration. Can run Python code to parse map data.",
    "agent_system_prompt": "You are a Map Analyzer for Pokémon Yellow Legacy. Your task is to analyze the provided `map_xml_string`, current player position, and list of map sprites (NPCs, items) to identify key strategic points on the current map. Focus on: 1. Unencountered trainers (check against a provided list of defeated trainers if available, otherwise assume all NPCs are potential trainers until interacted with). 2. Uncollected items visible in map sprites. 3. Patches of grass or water suitable for training (consider Pokémon levels if encounter data is inferable). 4. Significant clusters of 'Reachable Unseen Tiles'. 5. Warps or map connections not yet used or fully explored. Your output must conform to the provided schema. You have access to `run_code` to parse `map_xml_string` and perform spatial analysis. Prioritize actionable information that helps the player progress or gain resources.",
    "agent_input_schema": "{\"type\":\"object\",\"properties\":{\"player_x\":{\"type\":\"integer\"},\"player_y\":{\"type\":\"integer\"},\"map_sprites\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"id\":{\"type\":\"integer\"},\"sprite_type\":{\"type\":\"string\"},\"name\":{\"type\":\"string\"},\"position\":{\"type\":\"object\",\"properties\":{\"x\":{\"type\":\"integer\"},\"y\":{\"type\":\"integer\"}},\"required\":[\"x\",\"y\"]},\"facing\":{\"type\":\"string\"},\"reachable\":{\"type\":\"boolean\"}},\"required\":[\"id\",\"sprite_type\",\"name\",\"position\",\"facing\",\"reachable\"]}},\"defeated_trainer_log\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"map_id\":{\"type\":\"string\"},\"coordinates\":{\"type\":\"object\",\"properties\":{\"x\":{\"type\":\"integer\"},\"y\":{\"type\":\"integer\"}},\"required\":[\"x\",\"y\"]},\"trainer_name\":{\"type\":\"string\"}},\"required\":[\"map_id\",\"coordinates\",\"trainer_name\"]},\"description\":\"Log of trainers already defeated, to avoid re-targeting them.\"},\"reachable_unseen_tiles_count\":{\"type\":\"integer\"}},\"required\":[\"player_x\",\"player_y\",\"map_sprites\",\"defeated_trainer_log\",\"reachable_unseen_tiles_count\"]}",
    "agent_output_schema": "{\"type\":\"object\",\"properties\":{\"strategic_points\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"properties\":{\"type\":{\"type\":\"string\",\"enum\":[\"trainer\",\"item\",\"training_spot\",\"unseen_area\",\"warp_connection\"]},\"description\":{\"type\":\"string\"},\"coordinates\":{\"type\":\"object\",\"properties\":{\"x\":{\"type\":\"integer\"},\"y\":{\"type\":\"integer\"}},\"required\":[\"x\",\"y\"]},\"priority\":{\"type\":\"string\",\"enum\":[\"high\",\"medium\",\"low\"]}},\"required\":[\"type\",\"description\",\"coordinates\",\"priority\"]}},\"summary_advice\":{\"type\":\"string\"}},\"required\":[\"strategic_points\",\"summary_advice\"]}",
    "agent_can_run_code": true
  }
}